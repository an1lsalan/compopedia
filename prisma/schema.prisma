// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String      @id @default(cuid())
  name       String
  email      String      @unique
  password   String
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  components Component[]
}

model Category {
  id         String      @id @default(cuid())
  name       String      @unique
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  components Component[]
}

model Component {
  id          String      @id @default(cuid())
  title       String
  description String
  userId      String
  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  categoryId  String
  category    Category    @relation(fields: [categoryId], references: [id])
  textBlocks  TextBlock[]
  images      Image[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model TextBlock {
  id          String    @id @default(cuid())
  content     String
  language    String    @default("javascript") // FÃ¼ge dieses Feld hinzu
  componentId String
  component   Component @relation(fields: [componentId], references: [id], onDelete: Cascade)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Image {
  id          String    @id @default(cuid())
  url         String
  componentId String
  component   Component @relation(fields: [componentId], references: [id], onDelete: Cascade)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}
